{"version":3,"sources":["js/cronometro.js"],"names":["botaoIniciar","document","querySelector","botaoPausar","botaoParar","addEventListener","alteraEstado","output","contagem","estado","acao","setInterval","innerHTML","toFixed"],"mappings":"AAAA;AACA,IAAMA,YAAY,GAAIC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAtB;AACA,IAAMC,WAAW,GAAIF,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAArB;AACA,IAAME,UAAU,GAAIH,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAApB;AAEAF,YAAY,CAACK,gBAAb,CAA8B,OAA9B,EAAuC;AAAA,SAAMC,YAAY,CAAC,SAAD,CAAlB;AAAA,CAAvC;AACAH,WAAW,CAACE,gBAAZ,CAA6B,OAA7B,EAAuC;AAAA,SAAMC,YAAY,CAAC,QAAD,CAAlB;AAAA,CAAvC;AACAF,UAAU,CAACC,gBAAX,CAA4B,OAA5B,EAAuC;AAAA,SAAMC,YAAY,CAAC,OAAD,CAAlB;AAAA,CAAvC,GAEA;;AACA,IAAMC,MAAM,GAAGN,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AAEA,IAAIM,QAAQ,GAAG,CAAf;AACA,IAAIC,MAAM,GAAG,QAAb;AAEA;;;;;;AAKA,SAASH,YAAT,CAAsBI,IAAtB,EAA4B;AAC1B,UAAQD,MAAR;AAEE,SAAK,QAAL;AACE,cAAQC,IAAR;AACE,aAAK,SAAL;AACED,UAAAA,MAAM,GAAG,SAAT;AACA;;AACF,aAAK,OAAL;AACEA,UAAAA,MAAM,GAAG,QAAT,CADF,CACqB;;AACnBD,UAAAA,QAAQ,GAAG,CAAX;AACA;AAPJ;;AASA;;AAEF,SAAK,SAAL;AACE,cAAQE,IAAR;AACE,aAAK,QAAL;AACED,UAAAA,MAAM,GAAG,QAAT;AACA;;AACF,aAAK,OAAL;AACEA,UAAAA,MAAM,GAAG,QAAT;AACAD,UAAAA,QAAQ,GAAG,CAAX;AACA;AAPJ;;AASA;AAxBJ;AA2BD;AAED;;;;;AAGAG,WAAW,CACT,YAAW;AACT,MAAIF,MAAM,KAAK,SAAf,EAA0B;AACxBD,IAAAA,QAAQ,IAAI,GAAZ;AACD;;AACDD,EAAAA,MAAM,CAACK,SAAP,aAAsB,CAACJ,QAAQ,GAAG,IAAZ,EAAkBK,OAAlB,CAA0B,CAA1B,CAAtB;AACD,CANQ,EAOT,GAPS,CAAX","file":"cronometro.30fc3a0e.js","sourceRoot":"..","sourcesContent":["// Capturar referências para os dois botões:\nconst botaoIniciar =  document.querySelector('#iniciar');\nconst botaoPausar =  document.querySelector('#pausar');\nconst botaoParar =  document.querySelector('#parar');\n\nbotaoIniciar.addEventListener('click', () => alteraEstado('INICIAR'));\nbotaoPausar.addEventListener('click',  () => alteraEstado('PAUSAR'));\nbotaoParar.addEventListener('click',   () => alteraEstado('PARAR'));\n\n// Capturar referência para o <output>:\nconst output = document.querySelector('output');\n\nlet contagem = 0;\nlet estado = 'PARADO';\n\n/**\n * Computa o novo estado da aplicação baseado na ação especificada.\n *\n * @param acao INICIAR ou PAUSAR ou PARAR.\n */\nfunction alteraEstado(acao) {\n  switch (estado) {\n\n    case 'PARADO':\n      switch (acao) {\n        case 'INICIAR':\n          estado = 'RODANDO';\n          break;\n        case 'PARAR':\n          estado = 'PARADO'; // opcional, pois estado inicial = estado final\n          contagem = 0;\n          break;\n      }\n      break;\n\n    case 'RODANDO':\n      switch (acao) {\n        case 'PAUSAR':\n          estado = 'PARADO';\n          break;\n        case 'PARAR':\n          estado = 'PARADO';\n          contagem = 0;\n          break;\n      }\n      break;\n\n  }\n}\n\n/**\n * Atualiza a tela a cada 100 ms com base nas variáveis da memória.\n */\nsetInterval(\n  function() {\n    if (estado === 'RODANDO') {\n      contagem += 100;\n    }\n    output.innerHTML = `${(contagem / 1000).toFixed(1)} s`;\n  },\n  100,\n);\n"]}